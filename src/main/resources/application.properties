####################################
#### DEFAULT PROFILE PROPERTIES ####
####################################

#### Datasource
#spring.datasource.url=jdbc:mysql://localhost:3306/codingnomads?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
#spring.datasource.url=jdbc:mysql://localhost:3306/mybatis?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.url=jdbc:mysql://localhost:3306/mybatis?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC

# Please create environment variables for the following two keys and their relevant values.
# This can be done within IntelliJ run configurations, or at the operating system level.
spring.datasource.username=root
spring.datasource.password=K3yst0n3!!
# You can also hard-code the values, but be sure not to push them to GitHub!

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

#### Multipart Data
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB
server.servlet.session.timeout=24h

#### Properties Examples
nomad.framework=Spring Framework
nomad.jdk=Java 17
nomad.workingDays=Mon,Tue,Wed,Thu,Fri
nomad.name=Spring Dev
nomad.age=38
database.values={url:'http://127.0.0.1:3306/', db:'codingnomads', username:'codingnomads', password:'codingnomads'}

#### Custom Properties
bear.version=2.312
bear.name=Bear
bear.date=2017-Jan-14

docker.version=4.41.2
docker.engine=28.1.1
docker.name=Docker Desktop


#### Redis Cache is autoconfigured by Spring Boot
#spring.cache.redis.time-to-live=60000
#spring.cache.redis.cache-null-values=true

#### Spring Profiles
#spring.profiles.active=understanding_and_using_profiles
#spring.profiles.active=test
//spring.profiles.active=deploy
spring.profiles.active=apple

#### OAuth 2.0 Client
spring.security.oauth2.client.registration.google.client-id=670141908453-b3nlnt37a7dev8sm72rcpttau897houc.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email

spring.security.oauth2.client.registration.github.client-id=e465f45ead74a7977d21
spring.security.oauth2.client.registration.github.client-secret=347b0d33713f46d717f53ba7202c5dd33cf9c0da
spring.security.oauth2.client.registration.github.scope=user:email

#### Batch Demo Properties
mainDatasource.driver=com.mysql.cj.jdbc.Driver
mainDatasource.url=jdbc:mysql://localhost:3306/spring_batch_demo_main_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
mainDatasource.username=${LOCAL_DB_USER}
mainDatasource.password=${SECRET_KEY}

# disable job auto-execution
spring.batch.job.enabled=false
# create the batch related schema
spring.batch.jdbc.initialize-schema=never

batchDatasource.driver=com.mysql.cj.jdbc.Driver
batchDatasource.url=jdbc:mysql://localhost:3306/spring_batch_demo_batch_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
batchDatasource.username=${LOCAL_DB_USER}
batchDatasource.password=${SECRET_KEY}

# sample batch data file name
inputFile=sample-data.csv
sleepTime=0

#### Logging
logging.level.root=info
logging.level.org.springframework.security.web.FilterChainProxy=trace
spring.mvc.log-request-details=true
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security=DEBUG
#logging.level.org.apache.http=DEBUG
#logging.level.httpclient.wire=DEBUG
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type=TRACE

# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.url=jdbc:mysql://localhost:3306/codingnomads?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
#spring.datasource.username=root
# please enter your password below - be sure not to push your password to GitHub
#spring.datasource.password=YOUR_MYSQL_PASSWORD_HERE

